#Data structures

clothes_rack = []
clothes_rack.append("shirt")
clothes_rack.append("pants")
clothes_rack.append("hat")
clothes_rack.append("gloves")
clothes_rack.append("socks")
print(clothes_rack[1:3]) #slicing helps cut out a portion of the list, [1:3] will print out pants and hat


clothes_rack.extend(["t shirt", "shoes", "cap"]) #extend function will add to the list of printed objects
print(clothes_rack)

clothes_rack.insert(4, "gloves") #insert function will add an object at a specific index.  In this case, it will add "gloves" at index 4
print(clothes_rack)

clothes_rack.remove("shirt")  #remove function will remove the object specified from the list
print(clothes_rack) 

del clothes_rack[5]  #del function will delete the object at the specified index.   In this case, it will delete the object at index 5
print(clothes_rack)

last_item = clothes_rack.pop()   #pop function will remove the last object from the list and return it
print(last_item)

if "pants" in clothes_rack:
    print("pants is in the list")  #in block will check if the object is in index
else:
    print("pants is not in the list") 

print(clothes_rack.index("gloves"))   #index function will return the index of the object specified

clothes_rack.sort()
print(clothes_rack)  #sort function will sort the list in ascending order. it will  sort the list in alphabetical order

clothes_rack.reverse()
print(clothes_rack)  #reverse function will reverse the list.  

for x in clothes_rack:
    print(x)  #for loop will print out each object in the list in a new line. the variable x controls the loop by  going through each object in the list.  The loop will stop when it has gone through all objects

s = [x**2 for x in range(10)]
#For x = 0: (0^2 = 0)
#For x = 1: (1^2 = 1)
#For x = 2: (2^2 = 4)
#For x = 3: (3^2 = 9)
#For x = 4: (4^2 = 16)
#For x = 5: (5^2 = 25)
#For x = 6: (6^2 = 36)
#For x = 7: (7^2 = 49)
#For x = 8: (8^2 = 64)
#For x = 9: (9^2 = 81)

v = [2**i for i in range(13)]
   # For (i = 0): (2^0 = 1)
   # For (i = 1): (2^1 = 2)
    #For (i = 2): (2^2 = 4)
    #For (i = 3): (2^3 = 8)
    #For (i = 4): (2^4 = 16)
    #For (i = 5): (2^5 = 32)
    #For (i = 6): (2^6 = 64)
    #For (i = 7): (2^7 = 128)
    #For (i = 8): (2^8 = 256)
    #For (i = 9): (2^9 = 512)
    #For (i = 10): (2^{10} = 1024)
    #For (i = 11): (2^{11} = 2048)
    #For (i = 12): (2^{12} = 4096)
